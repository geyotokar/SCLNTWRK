{"version":3,"sources":["components/Login/Login.tsx"],"names":["LoginForm","captchaURL","login","src","alt","className","control","type","name","initialValues","email","password","captcha","onSubmit","values","setSubmitting","formData","isSubmitting","placeholder","component","disabled","Login","useSelector","state","auth","isAuth","dispatch","useDispatch","navigate","useNavigate"],"mappings":"8HAAA,mEAqCMA,EAA0C,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MAC1D,OAAID,EACO,gCACH,qBAAKE,IAAKF,EAAYG,IAAI,YAC1B,cAAC,IAAD,CAAOC,UAAU,mBAAmBC,QAAQ,QAAQC,KAAK,OAAOC,KAAK,eAGtE,cAAC,IAAD,CACHC,cAAe,CAACC,MAAO,GAAIC,SAAU,GAAIC,QAAS,MAClDC,SAAU,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cACVC,EAAyB,CAC3BN,MAAOI,EAAOJ,MACdC,SAAUG,EAAOH,SACjBC,QAASE,EAAOF,SAEpBV,EAAMc,GACND,GAAc,IATf,SAYF,gBAAEE,EAAF,EAAEA,aAAF,OACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAOZ,UAAU,mBAAmBE,KAAK,QAAQW,YAAY,SAASV,KAAK,UAC3E,cAAC,IAAD,CAAcA,KAAK,QAAQW,UAAU,QACrC,cAAC,IAAD,CAAOd,UAAU,mBAAmBE,KAAK,WAAWW,YAAY,WAAWV,KAAK,aAChF,cAAC,IAAD,CAAcA,KAAK,WAAWW,UAAU,QACxC,wBAAQZ,KAAK,SAASa,SAAUH,EAAhC,2BAQDI,UAvDS,WACpB,IAAMpB,EAAaqB,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKvB,cAC7DwB,EAASH,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKC,UACzDC,EAAWC,cACXC,EAAWC,cAOjB,OAHIJ,GACAG,EAAS,YAEN,sBAAKvB,UAAU,YAAf,UACH,uCACA,cAACL,EAAD,CAAWC,WAAYA,EAAYC,MARvB,SAACc,GACbU,EAASxB,YAAMc,EAASN,MAAOM,EAASL,SAAUK,EAASJ","file":"static/js/4.283e53c4.chunk.js","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../REDUX/redux-store\";\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\nimport {login} from \"../../REDUX/auth-reducer\";\nimport '../../assets/Form.css'\nimport './Login.css'\nimport {useNavigate} from \"react-router-dom\";\n\ntype FormDataType = {\n    email: string\n    password: string\n    captcha: string | null\n}\n\nconst Login: React.FC = () => {\n    const captchaURL = useSelector((state: AppStateType) => state.auth.captchaURL)\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const loginCB = (formData: FormDataType) => {\n        dispatch(login(formData.email, formData.password, formData.captcha))\n    }\n    if (isAuth) {\n        navigate('/profile')\n    }\n    return <div className='loginForm'>\n        <h1>LOGIN</h1>\n        <LoginForm captchaURL={captchaURL} login={loginCB}/>\n    </div>\n}\n\ntype LoginFormPropsType = {\n    captchaURL: string | null\n    login: (formData: FormDataType) => void\n}\n\nconst LoginForm: React.FC<LoginFormPropsType> = ({captchaURL, login}) => {\n    if (captchaURL) {\n        return <div>\n            <img src={captchaURL} alt='captcha'/>\n            <Field className='field loginField' control='input' type='text' name='captcha'/>\n        </div>\n    }\n    return <Formik\n        initialValues={{email: '', password: '', captcha: null as string | null}}\n        onSubmit={(values, {setSubmitting}) => {\n            const formData: FormDataType = {\n                email: values.email,\n                password: values.password,\n                captcha: values.captcha as string | null\n            }\n            login(formData)\n            setSubmitting(false);\n        }}\n    >\n        {({isSubmitting}) => (\n            <Form>\n                <Field className='field loginField' type='email' placeholder='e-mail' name='email'/>\n                <ErrorMessage name='email' component='div'/>\n                <Field className='field loginField' type='password' placeholder='password' name='password'/>\n                <ErrorMessage name='password' component='div'/>\n                <button type='submit' disabled={isSubmitting}>\n                    Submit\n                </button>\n            </Form>\n        )}\n    </Formik>\n}\n\nexport default Login"],"sourceRoot":""}