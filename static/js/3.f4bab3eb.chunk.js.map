{"version":3,"sources":["components/Dialogs/Dialog.tsx","components/Dialogs/Message.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx"],"names":["Dialog","props","online","isOnline","className","to","id","src","userPhoto","alt","name","Message","message","AddMessageForm","initialValues","newMessageBody","validate","values","length","onSubmit","setSubmitting","sendMessage","isSubmitting","type","placeholder","disabled","Dialogs","dialogs","useSelector","state","dialogsPage","messages","dispatch","useDispatch","dialogElements","map","d","messageElements","m","body","actions"],"mappings":"2KAqBeA,EAVA,SAACC,GACZ,IAAMC,EAAUD,EAAME,SAAW,SAAW,GAE5C,OAAQ,sBAAKC,UAAU,SAAf,UACJ,qBAAKA,UAAWF,IAChB,eAAC,IAAD,CAASG,GAAE,mBAAcJ,EAAMK,IAA/B,UAAqC,qBAAKC,IAAKC,IAAWC,IAAI,OAAOL,UAAU,mBAC1EH,EAAMS,YCHJC,EANsB,SAACV,GAClC,OAAQ,qBAAKG,UAAU,UAAf,SACHH,EAAMW,W,gBCuBAC,G,MAzB6B,SAACZ,GACzC,OAAO,cAAC,IAAD,CACKa,cAAe,CAACC,eAAgB,IAChCC,SAAU,SAAAC,GACN,GAAIA,EAAOF,eAAeG,OAAS,GAC/B,OAAO,oDAGfC,SAAU,SAACF,EAAD,GAA0G,IAAtEG,EAAqE,EAArEA,cAC1CnB,EAAMoB,YAAYJ,EAAOF,gBACzBE,EAAOF,eAAiB,GACxBK,GAAc,IAVvB,SAaM,gBAAGE,EAAH,EAAGA,aAAH,OACG,eAAC,IAAD,CAAMlB,UAAU,cAAhB,UACI,cAAC,IAAD,CAAOA,UAAU,QAAQmB,KAAK,OAAOb,KAAK,iBAAiBc,YAAY,2DACvE,wBAAQD,KAAK,SAASE,SAAUH,EAAhC,4E,OCQTI,UAxBW,WACtB,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,YAAYH,WACjEI,EAAWH,aAAY,SAACC,GAAD,OAAyBA,EAAMC,YAAYC,YAClEC,EAAWC,cAIbC,EACAP,EAAQQ,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAQ1B,KAAM0B,EAAE1B,KAAMJ,GAAI8B,EAAE9B,GAAIH,SAAUiC,EAAEjC,UAAeiC,EAAE9B,OAC9E+B,EACAN,EAASI,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,QAASN,GAAIgC,EAAEhC,IAASgC,EAAEhC,OACpE,OACI,sBAAKF,UAAU,mBAAf,UACI,qBAAKA,UAAU,UAAf,SACK8B,IAEL,qBAAK9B,UAAU,WAAf,SACI,8BAAMiC,MAEV,cAAC,EAAD,CAAgBhB,YAfF,SAACkB,GACnBP,EAASQ,IAAQnB,YAAYkB","file":"static/js/3.f4bab3eb.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport './Dialogs.css'\nimport userPhoto from \"../../assets/images/man.jpeg\";\n\ntype PropsType = {\n    id: number\n    name: string\n    isOnline: boolean\n}\n\nconst Dialog = (props: PropsType) => {\n    const online = (props.isOnline ? 'online' : '')\n\n    return (<div className='dialog'>\n        <div className={online}/>\n        <NavLink to={`/dialogs/${props.id}`}><img src={userPhoto} alt='user' className='photoUserSmall'/>\n            {props.name}</NavLink>\n    </div>)\n}\n\nexport default Dialog;\n","import React from 'react';\nimport './Dialogs.css'\n\nexport type PropsType = {\n    message: string\n    id: number\n}\n\nconst Message: React.FC<PropsType> = (props) => {\n    return (<div className='message'>\n        {props.message}\n    </div>)\n}\n\nexport default Message;\n","import React from \"react\";\nimport {Formik, Form, Field} from 'formik';\nimport '../../assets/Form.css'\n\ntype PropsType = {\n    sendMessage: (body: string) => void\n}\n\nconst AddMessageForm: React.FC<PropsType> = (props) => {\n    return <Formik\n                initialValues={{newMessageBody: ''}}\n                validate={values => {\n                    if (values.newMessageBody.length > 50) {\n                        return <div>message too long</div>\n                    }\n                }}\n                onSubmit={(values: {newMessageBody: string}, {setSubmitting}: {setSubmitting: (isSubmitting: boolean) => void}) => {\n                    props.sendMessage(values.newMessageBody)\n                    values.newMessageBody = ''\n                    setSubmitting(false);\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <Form className='messageForm'>\n                        <Field className='field' type='text' name='newMessageBody' placeholder='Сообщение'/>\n                        <button type='submit' disabled={isSubmitting}>\n                            Отправить\n                        </button>\n                    </Form>\n                )}\n            </Formik>\n}\n\nexport default AddMessageForm\n","import React from 'react';\nimport './Dialogs.css'\nimport Dialog from \"./Dialog\";\nimport Message from \"./Message\";\nimport {actions} from \"../../REDUX/dialogs-reducer\";\nimport AddMessageForm from \"./AddMessageForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../REDUX/redux-store\";\n\nconst Dialogs: React.FC = () => {\n    const dialogs = useSelector((state: AppStateType) => state.dialogsPage.dialogs)\n    const messages = useSelector((state: AppStateType) => state.dialogsPage.messages)\n    const dispatch = useDispatch()\n    const sendMessageCB = (body: string) => {\n        dispatch(actions.sendMessage(body))\n    }\n    let dialogElements =\n        dialogs.map(d => <Dialog name={d.name} id={d.id} isOnline={d.isOnline} key={d.id}/>)\n    let messageElements =\n        messages.map(m => <Message message={m.message} id={m.id} key={m.id}/>)\n    return (\n        <div className='dialogsContainer'>\n            <div className='dialogs'>\n                {dialogElements}\n            </div>\n            <div className='messages'>\n                <div>{messageElements}</div>\n            </div>\n            <AddMessageForm sendMessage={sendMessageCB}/>\n        </div>\n    )\n};\n\nexport default Dialogs;\n"],"sourceRoot":""}